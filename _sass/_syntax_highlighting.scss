/* Code syntax highlighting
   ========================================================================== */

/*
   generated by rouge http://rouge.jneen.net/
   original base16 by Chris Kempson (https://github.com/chriskempson/base16)
*/

@import "default_colors";

.highlight {

  $plaintext: $alto !default;
  $string: $chelsea-cucumber !default;
  $literal: $chelsea-cucumber !default;
  $keyword: $bouquet !default;
  $error-foreground: $cod-grey !default;
  $error-background: $gulf-stream !default;
  $comment: $grey !default;
  $preprocessor: $rajah !default;
  $name-space: $rajah !default;
  $name-attribute: $hippie-blue !default;
  $operator: $rajah !default;
  $keyword-type: $hippie-blue !default;
  $regex: $gulf-stream !default;
  $string-escape: $potters-clay !default;
  $deleted: $gulf-stream !default;
  $header: $hippie-blue !default;

  color: $plaintext;

  table td { padding: 5px; }
  table pre { margin: 0; }
  .w    { color: $plaintext; } // Text.Whitespace
  .err  { color: $error-foreground; background-color: $error-background; } //Err
  .c    { color: $comment; font-style: italic; } // Comment
  .cd   { color: $comment; } // Comment
  .cm   { color: $comment; font-style: italic; } // Comment.Multiline
  .c1   { color: $comment; font-style: italic;} // Comment.Single
  .cs   { color: $comment; font-weight: bold; font-style: italic; } // Comment.Special
  .cp   { color: $preprocessor; font-weight: bold; } // Comment.Preproc
  .o    { color: $operator; font-weight: bold; } // Operator
  .ow   { color: $operator; font-weight: bold; } // Operator.Word
  .p    { color: $plaintext; } //
  .pi   { color: $plaintext; }
  .gi   { color: $string;} // Generic.Inserted
  .gd   { color: $deleted; } // Generic.Deleted
  .gh   { color: $header; font-weight: bold; } // Generic.Heading
  .gs   { color: $header; font-weight: bold; } // Generic.
  .k    { color: $keyword; font-weight: bold; } // Keyword
  .kn   { color: $keyword; font-weight: bold; } // Keyword.
  .kp   { color: $keyword; font-weight: bold; } // Keyword.Pseudo
  .kr   { color: $keyword; font-weight: bold; } // Keyword.Reserved
  .kv   { color: $keyword; font-weight: bold; } // Keyword.
  .kc   { color: $keyword-type; font-weight: bold; } // Keyword.Constant
  .kt   { color: $keyword-type; font-weight: bold; } // Keyword.Type
  .kd   { color: $keyword-type; } // // Keyword.Declaration
  .nt   { color: $name-space; } // Name.Tag
  .nn   { color: $name-space; } // Name.Namespace
  .nc   { color: $name-space; font-weight: bold; } // Name.Class
  .no   { color: $name-space; } // Name.Constant
  .na   { color: $name-attribute; } //Name.Attribute
  .m    { color: $literal; } // Literal
  .s    { color: $string; } // Literal.String
  .sb   { color: $string; } // Literal.String.Backtick
  .sc   { color: $string; } // Literal.String.Char
  .sd   { color: $string; } // Literal.String.Doc
  .ss   { color: $string; } // Literal.String.Symbol
  .sh   { color: $string; } // Literal.String.Heredoc
  .s1   { color: $string; } // Literal.String.Single
  .s2   { color: $string; } // Literal.String.Double
  .sr   { color: $regex; } // Literal.String.Regex
  .sx   { color: $string; } // Literal.String.Other
  .si   { color: $string-escape; } // Literal.String.Interpol
  .se   { color: $string-escape; } // Literal.String.Excape
  .mf   { color: $literal; } // Literal.Number.Float
  .mh   { color: $literal; } // Literal.Number.Hex
  .mi   { color: $literal; } // Literal.Number.Integer
  .il   { color: $literal; } // Literal.Number.Integer.Long
  .mo   { color: $literal; } // Literal.Number.Oct
  .mb   { color: $literal; } // Literal.Number.Binary
  .mx   { color: $literal; } // Literal.Number.
}

/* End syntax highlighting
   ========================================================================== */
